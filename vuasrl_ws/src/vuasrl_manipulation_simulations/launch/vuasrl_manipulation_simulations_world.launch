<launch>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <arg name="world_name" default="smart_tugcar.world"/>
  <arg name="world_file" default="$(find vuasrl_car_description)/models/$(arg world_name)"/>  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>    
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


   <!-- Load the robot description from the URDF file -->
   <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find vuasrl_manipulation)/urdf/vuasrl_manipulation.urdf.xacro'"/>
      
   <!-- Provide a static transformation between the 'world' and 'odom' frames -->
   <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_world_broadcaster" args="0 0 0 0 0 0 vuasrl/odom base_footprint" />

   <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model vuasrl_manipulation -param robot_description -x 0.0 -y 0.0 -z 1.0">
     <param name="wait_for_service" value="10.0" />
    </node>

</launch>
